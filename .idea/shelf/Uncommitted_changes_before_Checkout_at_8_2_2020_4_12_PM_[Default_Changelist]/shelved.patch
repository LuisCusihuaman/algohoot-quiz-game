Index: src/main/java/poo/coders/main/PuntajePenalidad.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\npublic class PuntajePenalidad implements Puntaje {\r\n\tint puntaje = 0;\r\n\tint factor = 1;\r\n\r\n\t@Override\r\n\tpublic void incrementarPuntaje() {\r\n\t\tpuntaje = factor;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void anularPuntaje() {\r\n\t\tfactor = -1;\r\n\t\tpuntaje = factor;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic int getPuntajeAcumulado() {\r\n\t\treturn puntaje;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/PuntajePenalidad.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/PuntajePenalidad.java	(date 1596394952984)
@@ -5,14 +5,13 @@
 	int factor = 1;
 
 	@Override
-	public void incrementarPuntaje() {
-		puntaje = factor;
+	public void accionCorrecta() {
+		puntaje += factor;
 	}
 
 	@Override
-	public void anularPuntaje() {
-		factor = -1;
-		puntaje = factor;
+	public void accionIncorrecta() {
+		puntaje -= factor;
 	}
 
 	@Override
Index: src/main/java/poo/coders/main/ComportamientoVoFPenalidad.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\npublic class ComportamientoVoFPenalidad implements Comportamiento {\r\n\t@Override\r\n\tpublic void correcto(Puntaje puntaje) {\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void incorrecto(Puntaje puntaje) {\r\n\t\tpuntaje.anularPuntaje();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Puntaje crearPuntaje() {\r\n\t\treturn new PuntajePenalidad();\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/ComportamientoVoFPenalidad.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/ComportamientoVoFPenalidad.java	(date 1596394819551)
@@ -3,12 +3,12 @@
 public class ComportamientoVoFPenalidad implements Comportamiento {
 	@Override
 	public void correcto(Puntaje puntaje) {
-		puntaje.incrementarPuntaje();
+		puntaje.accionCorrecta();
 	}
 
 	@Override
 	public void incorrecto(Puntaje puntaje) {
-		puntaje.anularPuntaje();
+		puntaje.accionIncorrecta();
 	}
 
 	@Override
Index: src/test/java/poo/coders/main/ComportamientoVoFPenalidadITest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.util.ArrayList;\r\n\r\nclass ComportamientoVoFPenalidadITest {\r\n/*\r\n\t@Test\r\n\tvoid deberiaPreguntaVoFPenalidadCrearseCorrectamenteIndicandoleCualEsLaRespuestaCorrecta() {\r\n\t\tPregunta             pregunta        = new Pregunta(\"Este es el mejor TP.\", new ComportamientoVoFPenalidad());\r\n\t\tRespuestaCorrecta    correcta        = new RespuestaCorrecta();\r\n\t\tArrayList<Respuesta> listaRespuestas = new ArrayList<>();\r\n\t\tlistaRespuestas.add(correcta);\r\n\t\tPuntos diferencialPuntos = pregunta.obtenerPuntaje(listaRespuestas);\r\n\t\tAssertions.assertEquals(1, diferencialPuntos.getCantidadPuntos());\r\n\t}\r\n\r\n\t@Test\r\n\tvoid jugadorCon5puntosRespondeIncorrectamente2vecesYSuPuntajeDeberiaSer3() {\r\n\t\tJugador              jugador          = new Jugador(\"Alan\");\r\n\t\tPregunta             pregunta         = new Pregunta(\"El software es tangible.\", new ComportamientoVoFPenalidad());\r\n\t\tArrayList<Respuesta> respuestaJugador = new ArrayList<>();\r\n\t\trespuestaJugador.add(new RespuestaIncorrecta(\"\"));\r\n\t\trespuestaJugador.add(new RespuestaIncorrecta(\"\"));\r\n\t\tjugador.procesarPregunta(pregunta, respuestaJugador);\r\n\t\tAssertions.assertEquals(3, jugador.getPuntos());\r\n\t}\r\n*/\r\n\t@Test\r\n\tpublic void test02JugadorRespondeConUnaIncorrectaTienePuntajeMenos1() {\r\n\t\tJugador jugador = new Jugador(\"\");\r\n\t\tPregunta pregunta = new Pregunta(\"\", new ComportamientoVoFPenalidad());\r\n\t\tArrayList<Respuesta> respuestasJugador  = new ArrayList<>();\r\n\t\trespuestasJugador.add(new RespuestaIncorrecta(\"\"));\r\n\r\n\t\tjugador.procesarPregunta(pregunta, respuestasJugador);\r\n\r\n\t\tAssertions.assertEquals(-1, jugador.getPuntos());\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void test03JugadorRespondeCon1CorrectaTienePuntaje1() {\r\n\t\tJugador jugador = new Jugador(\"\");\r\n\t\tPregunta pregunta =  new Pregunta(\"\", new ComportamientoVoFPenalidad());\r\n\t\tArrayList<Respuesta> respuestasJugador = new ArrayList<>();\r\n\t\trespuestasJugador.add(new RespuestaCorrecta(\"\"));\r\n\t\trespuestasJugador.add(new RespuestaCorrecta(\"\"));\r\n\r\n\t\tjugador.procesarPregunta(pregunta, respuestasJugador);\r\n\r\n\t\tAssertions.assertEquals(1, jugador.getPuntos());\r\n\r\n\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/poo/coders/main/ComportamientoVoFPenalidadITest.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/test/java/poo/coders/main/ComportamientoVoFPenalidadITest.java	(date 1596395210617)
@@ -46,12 +46,10 @@
 		Pregunta pregunta =  new Pregunta("", new ComportamientoVoFPenalidad());
 		ArrayList<Respuesta> respuestasJugador = new ArrayList<>();
 		respuestasJugador.add(new RespuestaCorrecta(""));
-		respuestasJugador.add(new RespuestaCorrecta(""));
 
 		jugador.procesarPregunta(pregunta, respuestasJugador);
 
 		Assertions.assertEquals(1, jugador.getPuntos());
 
-
 	}
 }
Index: src/main/java/poo/coders/main/ComportamientoMultipleChoiceClasico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\npublic class ComportamientoMultipleChoiceClasico implements Comportamiento {\r\n\t@Override\r\n\tpublic void correcto(Puntaje puntaje) {\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void incorrecto(Puntaje puntaje) {\r\n\t\tpuntaje.anularPuntaje();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Puntaje crearPuntaje() {\r\n\t\treturn new PuntajeClasico();\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/ComportamientoMultipleChoiceClasico.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/ComportamientoMultipleChoiceClasico.java	(date 1596394819533)
@@ -3,12 +3,12 @@
 public class ComportamientoMultipleChoiceClasico implements Comportamiento {
 	@Override
 	public void correcto(Puntaje puntaje) {
-		puntaje.incrementarPuntaje();
+		puntaje.accionCorrecta();
 	}
 
 	@Override
 	public void incorrecto(Puntaje puntaje) {
-		puntaje.anularPuntaje();
+		puntaje.accionIncorrecta();
 	}
 
 	@Override
Index: src/main/java/poo/coders/main/ComportamientoVoF.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\npublic class ComportamientoVoF implements Comportamiento {\r\n\t@Override\r\n\tpublic void correcto(Puntaje puntaje) {\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void incorrecto(Puntaje puntaje) {\r\n\t\tpuntaje.anularPuntaje();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Puntaje crearPuntaje() {\r\n\t\treturn new PuntajeParcial();\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/ComportamientoVoF.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/ComportamientoVoF.java	(date 1596394819523)
@@ -3,12 +3,12 @@
 public class ComportamientoVoF implements Comportamiento {
 	@Override
 	public void correcto(Puntaje puntaje) {
-		puntaje.incrementarPuntaje();
+		puntaje.accionCorrecta();
 	}
 
 	@Override
 	public void incorrecto(Puntaje puntaje) {
-		puntaje.anularPuntaje();
+		puntaje.accionIncorrecta();
 	}
 
 	@Override
Index: src/main/java/poo/coders/main/PuntajeParcial.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\npublic class PuntajeParcial implements Puntaje {\r\n\tint puntajeAcumulado = 0;\r\n\tint factor = 1;\r\n\r\n\t@Override\r\n\tpublic void incrementarPuntaje(){\r\n\t\tpuntajeAcumulado += factor;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void anularPuntaje() {\r\n\t\tpuntajeAcumulado = 0;\r\n\t\tfactor = 0;\r\n\t}\r\n\t\r\n\tpublic int getPuntajeAcumulado(){\r\n\t\treturn puntajeAcumulado;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/PuntajeParcial.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/PuntajeParcial.java	(date 1596394819568)
@@ -5,16 +5,16 @@
 	int factor = 1;
 
 	@Override
-	public void incrementarPuntaje(){
+	public void accionCorrecta(){
 		puntajeAcumulado += factor;
 	}
 
 	@Override
-	public void anularPuntaje() {
+	public void accionIncorrecta() {
 		puntajeAcumulado = 0;
 		factor = 0;
 	}
-	
+
 	public int getPuntajeAcumulado(){
 		return puntajeAcumulado;
 	}
Index: src/main/java/poo/coders/main/Pregunta.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\nimport java.util.List;\r\n\r\npublic class Pregunta {\r\n\tprivate Comportamiento  tipoComportamiento;\r\n\tprivate String          textoPregunta;\r\n\tprivate List<Respuesta> respuestas;\r\n\r\n\tpublic Pregunta(String textoPregunta, Comportamiento comportamiento) {\r\n\t\tthis.tipoComportamiento = comportamiento;\r\n\t\tthis.textoPregunta = textoPregunta;\r\n\t}\r\n\r\n\tpublic String getTextoPregunta() {\r\n\t\treturn textoPregunta;\r\n\t}\r\n/*\r\n\tprivate Puntos obtenerPuntaje(Respuesta respuesta, Puntos puntajeRespuesta) {\r\n\t\trespuesta.aplicarComportamiento(tipoComportamiento, puntajeRespuesta);\r\n\t\treturn puntajeRespuesta;\r\n\t}\r\n\r\n\tpublic Puntos obtenerPuntaje(List<Respuesta> respuestas) {\r\n\t\tPuntos puntajeTotalPregunta = new Puntos();\r\n\t\tfor (Respuesta unaRespuesta : respuestas) {\r\n\t\t\tthis.obtenerPuntaje(unaRespuesta, puntajeTotalPregunta);\r\n\t\t}\r\n\t\treturn puntajeTotalPregunta;\r\n\t}\r\n*/\r\n\tpublic int obtenerPuntaje(List<Respuesta> respuestas) {\r\n\t\tPuntaje puntajePregunta = tipoComportamiento.crearPuntaje();\r\n\r\n\t\tfor (Respuesta unaRespuesta : respuestas) {\r\n\t\t\tunaRespuesta.aplicarComportamiento(tipoComportamiento, puntajePregunta);\r\n\t\t}\r\n\t\treturn puntajePregunta.getPuntajeAcumulado();\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/Pregunta.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/Pregunta.java	(date 1596394478490)
@@ -37,5 +37,4 @@
 		}
 		return puntajePregunta.getPuntajeAcumulado();
 	}
-
 }
Index: src/main/java/poo/coders/main/Jugador.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\nimport java.util.List;\r\n\r\npublic class Jugador {\r\n\r\n\tprivate String nombre;\r\n\tprivate int puntajeJugador = 0;\r\n\r\n\tpublic Jugador(String nombre) {\r\n\t\tthis.nombre = nombre;\r\n\t}\r\n\tpublic void procesarPregunta(Pregunta pregunta, List<Respuesta> respuestas) {\r\n\t\tpuntajeJugador = puntajeJugador + pregunta.obtenerPuntaje(respuestas);\r\n\t}\r\n\r\n\tpublic int getPuntos() {\r\n\t\treturn puntajeJugador;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/Jugador.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/Jugador.java	(date 1596392723390)
@@ -10,6 +10,7 @@
 	public Jugador(String nombre) {
 		this.nombre = nombre;
 	}
+
 	public void procesarPregunta(Pregunta pregunta, List<Respuesta> respuestas) {
 		puntajeJugador = puntajeJugador + pregunta.obtenerPuntaje(respuestas);
 	}
Index: src/test/java/poo/coders/main/PuntajeTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.Test;\r\n\r\npublic class PuntajeTests {\r\n\t@Test\r\n\tpublic void test01PuntajeClasicoDevuelveCeroCuandoSeAnula() {\r\n\t\tPuntajeClasico puntaje = new PuntajeClasico();\r\n\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t\tpuntaje.anularPuntaje();\r\n\r\n\t\tAssertions.assertEquals(0, puntaje.getPuntajeAcumulado());\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void test02PuntajeClasicoSeIncrementaVariasVecesDevuelve1() {\r\n\t\tPuntajeClasico puntaje = new PuntajeClasico();\r\n\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t\tpuntaje.incrementarPuntaje();\r\n\r\n\t\tAssertions.assertEquals(1, puntaje.getPuntajeAcumulado());\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void test03PuntajeParcialSeIncrementa3VecesDevuelvePuntaje3() {\r\n\t\tPuntajeParcial puntaje = new PuntajeParcial();\r\n\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t\tpuntaje.incrementarPuntaje();\r\n\r\n\t\tAssertions.assertEquals(3, puntaje.getPuntajeAcumulado());\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void test04PuntajeParcialSeIncrementa2VecesYSeAnulaUnaVezDevuelvePuntaje0() {\r\n\t\tPuntajeParcial puntaje = new PuntajeParcial();\r\n\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t\tpuntaje.anularPuntaje();\r\n\r\n\t\tAssertions.assertEquals(0, puntaje.getPuntajeAcumulado());\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void test05PuntajePenalidadSeIncrementa1VezDevuelvePuntaje1() {\r\n\t\tPuntaje puntaje = new PuntajePenalidad();\r\n\r\n\t\tpuntaje.incrementarPuntaje();\r\n\r\n\t\tAssertions.assertEquals(1, puntaje.getPuntajeAcumulado());\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void test06PuntajePenalidadSeAnulaDevuelvePuntajeMenos1() {\r\n\t\tPuntaje puntaje = new PuntajePenalidad();\r\n\r\n\t\tpuntaje.anularPuntaje();\r\n\r\n\t\tAssertions.assertEquals(-1, puntaje.getPuntajeAcumulado());\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/poo/coders/main/PuntajeTests.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/test/java/poo/coders/main/PuntajeTests.java	(date 1596394819511)
@@ -8,9 +8,9 @@
 	public void test01PuntajeClasicoDevuelveCeroCuandoSeAnula() {
 		PuntajeClasico puntaje = new PuntajeClasico();
 
-		puntaje.incrementarPuntaje();
-		puntaje.incrementarPuntaje();
-		puntaje.anularPuntaje();
+		puntaje.accionCorrecta();
+		puntaje.accionCorrecta();
+		puntaje.accionIncorrecta();
 
 		Assertions.assertEquals(0, puntaje.getPuntajeAcumulado());
 	}
@@ -19,9 +19,9 @@
 	public void test02PuntajeClasicoSeIncrementaVariasVecesDevuelve1() {
 		PuntajeClasico puntaje = new PuntajeClasico();
 
-		puntaje.incrementarPuntaje();
-		puntaje.incrementarPuntaje();
-		puntaje.incrementarPuntaje();
+		puntaje.accionCorrecta();
+		puntaje.accionCorrecta();
+		puntaje.accionCorrecta();
 
 		Assertions.assertEquals(1, puntaje.getPuntajeAcumulado());
 	}
@@ -30,9 +30,9 @@
 	public void test03PuntajeParcialSeIncrementa3VecesDevuelvePuntaje3() {
 		PuntajeParcial puntaje = new PuntajeParcial();
 
-		puntaje.incrementarPuntaje();
-		puntaje.incrementarPuntaje();
-		puntaje.incrementarPuntaje();
+		puntaje.accionCorrecta();
+		puntaje.accionCorrecta();
+		puntaje.accionCorrecta();
 
 		Assertions.assertEquals(3, puntaje.getPuntajeAcumulado());
 	}
@@ -41,9 +41,9 @@
 	public void test04PuntajeParcialSeIncrementa2VecesYSeAnulaUnaVezDevuelvePuntaje0() {
 		PuntajeParcial puntaje = new PuntajeParcial();
 
-		puntaje.incrementarPuntaje();
-		puntaje.incrementarPuntaje();
-		puntaje.anularPuntaje();
+		puntaje.accionCorrecta();
+		puntaje.accionCorrecta();
+		puntaje.accionIncorrecta();
 
 		Assertions.assertEquals(0, puntaje.getPuntajeAcumulado());
 	}
@@ -52,7 +52,7 @@
 	public void test05PuntajePenalidadSeIncrementa1VezDevuelvePuntaje1() {
 		Puntaje puntaje = new PuntajePenalidad();
 
-		puntaje.incrementarPuntaje();
+		puntaje.accionCorrecta();
 
 		Assertions.assertEquals(1, puntaje.getPuntajeAcumulado());
 	}
@@ -61,7 +61,7 @@
 	public void test06PuntajePenalidadSeAnulaDevuelvePuntajeMenos1() {
 		Puntaje puntaje = new PuntajePenalidad();
 
-		puntaje.anularPuntaje();
+		puntaje.accionIncorrecta();
 
 		Assertions.assertEquals(-1, puntaje.getPuntajeAcumulado());
 	}
Index: src/main/java/poo/coders/main/ComportamientoMultipleChoiceParcial.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\npublic class ComportamientoMultipleChoiceParcial implements Comportamiento {\r\n\r\n\t@Override\r\n\tpublic void correcto(Puntaje puntaje) {\r\n\t\tpuntaje.incrementarPuntaje();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void incorrecto(Puntaje puntaje) {\r\n\t\tpuntaje.anularPuntaje();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Puntaje crearPuntaje() {\r\n\t\treturn new PuntajeParcial();\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/ComportamientoMultipleChoiceParcial.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/ComportamientoMultipleChoiceParcial.java	(date 1596394819559)
@@ -4,12 +4,12 @@
 
 	@Override
 	public void correcto(Puntaje puntaje) {
-		puntaje.incrementarPuntaje();
+		puntaje.accionCorrecta();
 	}
 
 	@Override
 	public void incorrecto(Puntaje puntaje) {
-		puntaje.anularPuntaje();
+		puntaje.accionIncorrecta();
 	}
 
 	@Override
Index: src/main/java/poo/coders/main/Puntaje.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\npublic interface Puntaje {\r\n\tvoid incrementarPuntaje();\r\n\tvoid anularPuntaje();\r\n\tint getPuntajeAcumulado();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/Puntaje.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/Puntaje.java	(date 1596394819499)
@@ -1,7 +1,7 @@
 package poo.coders.main;
 
 public interface Puntaje {
-	void incrementarPuntaje();
-	void anularPuntaje();
+	void accionCorrecta();
+	void accionIncorrecta();
 	int getPuntajeAcumulado();
 }
Index: src/main/java/poo/coders/main/PuntajeClasico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package poo.coders.main;\r\n\r\npublic class PuntajeClasico implements Puntaje {\r\n\tint puntajeAcumulado = 0;\r\n\tint factor = 1;\r\n\r\n\t@Override\r\n\tpublic void incrementarPuntaje(){\r\n\t\tpuntajeAcumulado = factor;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void anularPuntaje(){\r\n\t\tpuntajeAcumulado = 0;\r\n\t\tfactor = 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic int getPuntajeAcumulado() {\r\n\t\treturn puntajeAcumulado;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/poo/coders/main/PuntajeClasico.java	(revision 36a440e07ec89b2857e563b722e17174f587e2c8)
+++ src/main/java/poo/coders/main/PuntajeClasico.java	(date 1596394819485)
@@ -5,12 +5,12 @@
 	int factor = 1;
 
 	@Override
-	public void incrementarPuntaje(){
+	public void accionCorrecta(){
 		puntajeAcumulado = factor;
 	}
 
 	@Override
-	public void anularPuntaje(){
+	public void accionIncorrecta(){
 		puntajeAcumulado = 0;
 		factor = 0;
 	}
